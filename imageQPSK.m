%%%%%   WORD STUFF %%%%%
%wordstring = 'beees words words words words words';
%    doubles = double(wordstring);
%    binary = (dec2bin(doubles));
    
%    binary = binary -'0';

%%%%% IMPORTFILE(FILETOREAD1) %%%%%
%  Imports data from the specified file
%  FILETOREAD1:  file to read
%  Auto-generated by MATLAB on 23-Apr-2017 15:20:29
%%% Import the file
%binarydata = importdata('doge.bmp');
% Create new variables in the base workspace from those fields.
%vars = fieldnames(binarydata);
%for i = 1:length(vars)
%    assignin('base', vars{i}, binarydata.(vars{i}));
%end
imagedata = imread('doge.bmp');
%%%DO IF not Image class already
%imagedata = image(imagedata);
binarydata = double(imagedata);


%%%%% ACTUAL QPSK %%%%%
    [rowbin,colbin] = size(binarydata);
    
    I = binarydata(:,1:2:end); % odds --> cos
    Q = binarydata(:,2:2:end); % evens --> sin
   
    I( I == 0) = -1;
    Q( Q == 1) = j;
    Q( Q == 0) = -j;
    %Q = [Q j*ones(rowbin,1)]; %not needed for image
    
    totalmatrix = I + Q;
    totalresult = flipud(rot90(totalmatrix));

    %%%%% ADD P(F) %%%%%
%    address='30C628D';
%       %%tx = comm.SDRuTransmitter('Platform','B210','SerialNum',address,'Gain', 200,'CenterFrequency',2.5e9)
%    p = ones(100,1);
%    [r,c] = size(totalresult);
    
%%%%% SEND %%%%%
%    for i = 1:20
%        for col = 1:c
%            data = 0.5*(totalresult(:,c));
%            tmp = repmat(data,100,1); % lengthens matrix
%            tmp = upsample(tmp,100); % to prevent switching too fast
%            x = conv(tmp,p); % to make an actual square wave
%                step(tx,x);
%        end
%    end


